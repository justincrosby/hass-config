shutoff:
  alias: Shutoff All
  sequence:
    - service: script.turn_on
      entity_id: script.bedroom_light_fade_out
    - delay:
        seconds: 15
    - service: light.turn_off
      entity_id: light.all_lights
    - service: input_select.select_option
      data:
        entity_id: input_select.receiver_source_select
        option: Shutdown
    - delay:
        seconds: 1
    - service: switch.turn_off
      entity_id: switch.justins_pc
#    - service: lock.lock
#      entity_id: lock.front_door
#    - service: switch.turn_off
#      entity_id: switch.led_strip_switch
    - condition: state
      entity_id: input_boolean.bedtime
      state: 'off'
    - service: switch.turn_off
      entity_id: switch.bedroom_air_purifier
bedroom_light_fade_out:
  alias: Fade out the bedroom lights if they are on
  sequence:
    - condition: state
      entity_id: light.bedroom
      state: 'on'
    - service: light.turn_on
      data:
        entity_id: light.bedroom
        brightness: 0
        transition: 15
morning:
  alias: Morning
  sequence:
    - service: script.turn_on
      entity_id: script.ringer_on_conditional
    - service: input_boolean.turn_off
      entity_id: input_boolean.bedtime
    - service: input_boolean.turn_on
      entity_id: input_boolean.enable_presence_automations
    - condition: state
      entity_id: binary_sensor.alarm_full
      state: 'on'
    - service: shell_command.reboot_router
    - delay:
        minutes: 10
    - service: script.turn_on
      entity_id: script.morning_music
    - delay:
        minutes: 4
    - service: light.turn_on
      data:
        entity_id: light.bedroom
        rgb_color: [255, 0, 0]
        brightness_pct: 1
    - delay:
        seconds: 1
    - service: light.turn_on
      data:
        entity_id: light.bedroom
        rgb_color: [255, 255, 0]
        brightness_pct: 80
        transition: 300
    - delay:
        minutes: 25
    - service: light.turn_on
      data:
        entity_id: light.bedroom
        rgb_color: [255, 255, 255]
        brightness_pct: 100
        transition: 100
    - service: switch.turn_off
      entity_id: switch.bedroom_air_purifier
ringer_on_conditional:
  alias: Phone Ringer On Conditional
  sequence:
    - condition: state
      entity_id: binary_sensor.justin_presence
      state: 'on'
    - service: switch.turn_on
      entity_id: switch.phone_morning
sunset:
  alias: Sunset
  sequence:
    - condition: sun
      after: sunset
      after_offset: "-00:30:00"
    - service: light.turn_on
      entity_id: light.fairy_lights
    - service: light.turn_on
      entity_id: light.living_room_lamp
#    - service: switch.turn_on
#      entity_id: switch.christmas_wreath
#    - service: script.turn_on
#      entity_id: script.led_strip_turn_on
bedtime:
  alias: Bedtime
  sequence:
    - service: script.turn_on
      entity_id: script.shutoff
    - delay:
        seconds: 1
    - wait_template: '{{ is_state("script.shutoff", "off") }}'
      timeout: '00:01:00'
    - service: input_boolean.turn_on
      entity_id: input_boolean.bedtime
    - service: input_boolean.turn_off
      entity_id: input_boolean.enable_presence_automations
    - service: switch.turn_on
      entity_id: switch.phone_bedtime
    - service: script.turn_on
      entity_id: script.forgot_to_feed_fish
    - service: input_boolean.turn_off
      entity_id: input_boolean.fish_fed_tracker
    - service: script.turn_on
      entity_id: script.forgot_to_water_the_plants
    - service: input_boolean.turn_off
      entity_id: input_boolean.plants_watered_tracker
    - service: switch.turn_on
      entity_id: switch.bedroom_air_purifier
update_weekday_alarm:
  alias: Update Weekday Alarm
  sequence:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - service_template: >
        {% if now().strftime("%h %d") == states("sensor.next_alarm_day") %}
          input_boolean.turn_on
        {% else %}
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.workday_alarm
    - condition: state
      entity_id: input_boolean.workday_alarm
      state: 'on'
    - service: input_number.set_value
      data_template:
        entity_id: input_number.workday_hours
        value: '{{ states("sensor.next_alarm_hour") }}'
    - service: input_number.set_value
      data_template:
        entity_id: input_number.workday_minutes
        value: '{{ states("sensor.next_alarm_minute") }}'
update_weekend_alarm:
  alias: Update Weekend Alarm
  sequence:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'off'
    - service_template: >
        {% if now().strftime("%h %d") == states("sensor.next_alarm_day") %}
          input_boolean.turn_on
        {% else %}
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.weekend_alarm
    - condition: state
      entity_id: input_boolean.weekend_alarm
      state: 'on'
    - service: input_number.set_value
      data_template:
        entity_id: input_number.weekend_hours
        value: '{{ states("sensor.next_alarm_hour") }}'
    - service: input_number.set_value
      data_template:
        entity_id: input_number.weekend_minutes
        value: '{{ states("sensor.next_alarm_minute") }}'
update_alarms:
  alias: Update Alarms
  sequence:
    - service: script.turn_on
      entity_id: script.update_weekday_alarm
    - service: script.turn_on
      entity_id: script.update_weekend_alarm
