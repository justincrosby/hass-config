volume_up:
  alias: Volume Up
  sequence:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.denon_avr_x1300w
        volume_level: '{{ state_attr("media_player.denon_avr_x1300w", "volume_level") + 0.05 }}'
volume_down:
  alias: Volume Down
  sequence:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.denon_avr_x1300w
        volume_level: '{{ state_attr("media_player.denon_avr_x1300w", "volume_level") - 0.05 }}'
shower_time:
  alias: Increase the Volume During Shower
  sequence:
    - delay:
        seconds: 2
    - service: input_number.set_value
      data:
        entity_id: input_number.master_bathroom_audio_volume
        value: 0.5
    - delay:
        minutes: 15
    - service: input_number.set_value
      data:
        entity_id: input_number.master_bathroom_audio_volume
        value: !secret default_bathroom_audio_volume
morning_music:
  alias: Start music quietly in the morning
  sequence:
    - service: input_select.select_option
      data:
        entity_id: input_select.media_output_select
        option: 'Master Bedroom Audio'
    - service: input_select.select_option
      data:
        entity_id: input_select.receiver_source_select
        option: 'Cast Audio'
    - service: script.turn_on
      data:
        entity_id: script.play_chill_music_var
        variables:
          volume_level: 0
    - condition: state
      entity_id: script.start_playlist
      state: 'off'
    - service: python_script.volume_fade
      data:
        step_size: 1
        end_volume: 35
    - delay:
        minutes: 20
    - service: python_script.volume_fade
      data:
        step_size: 5
        end_volume: 0
    - service: input_select.select_option
      data:
        entity_id: input_select.media_output_select
        option: 'Master Suite Audio'
    - service: media_player.media_stop
      data_template:
        entity_id: '{{ states("sensor.media_player_output") }}'
    - wait_template: '{{ not is_state("sensor.media_player_status", "playing") }}'
      timeout: '00:01:00'
    - service: script.turn_on
      data:
        entity_id: script.play_all_music_var
        variables:
          volume_level: 0
    - condition: state
      entity_id: script.start_playlist
      state: 'off'
    - service: python_script.volume_fade
      data:
        step_size: 5
        end_volume: 40
set_receiver_volume:
  alias: Set the receiver volume according to the slider
  sequence:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.bathroom_speaker
        volume_level: '{{ states("input_number.receiver_audio_volume")|float / 100 }}'
set_chromecast_volume:
  alias: Set the chromecast volume according to the slider
  sequence:
    - service: media_player.volume_set
      data_template:
        entity_id: '{{ states("sensor.media_player_output") }}'
        volume_level: '{{ states("input_number.chromecast_audio_volume")|float / 100 }}'
set_default_audio_levels:
  alias: Sets a good audio level throughout the house
  sequence:
    - service: script.turn_on
      entity_id: script.set_default_bedroom_volume
    - service: script.turn_on
      entity_id: script.set_default_master_suite_volume
    - service: script.turn_on
      entity_id: script.set_default_home_audio_volume
    - service: script.turn_on
      entity_id: script.set_default_receiver_volume
set_default_bedroom_volume:
  alias: Sets the default volume for bedroom audio when selected
  sequence:
    - condition: state
      entity_id: input_select.receiver_source_select
      state: 'Cast Audio'
    - condition: state
      entity_id: input_select.media_output_select
      state: 'Bedroom Audio'
    - wait_template: '{{ is_state("sensor.media_player_status", "playing") }}'
      timeout: '00:1:00'
    - service: input_number.set_value
      data:
        entity_id: input_number.master_bedroom_audio_volume
        value: !secret default_master_bedroom_audio_volume
set_default_master_suite_volume:
  alias: Sets the default volume for master suite audio when selected
  sequence:
    - condition: state
      entity_id: input_select.receiver_source_select
      state: 'Cast Audio'
    - condition: state
      entity_id: input_select.media_output_select
      state: 'Master Suite Audio'
    - wait_template: '{{ is_state("sensor.media_player_status", "playing") }}'
      timeout: '00:1:00'
    - service: input_number.set_value
      data:
        entity_id: input_number.master_bedroom_audio_volume
        value: !secret default_master_bedroom_audio_volume
    - delay:
        milliseconds: 500
    - service: input_number.set_value
      data:
        entity_id: input_number.master_bathroom_audio_volume
        value: !secret default_bathroom_audio_volume
set_default_home_audio_volume:
  alias: Sets the default volume for home audio when selected
  sequence:
    - condition: state
      entity_id: input_select.receiver_source_select
      state: 'Cast Audio'
    - condition: state
      entity_id: input_select.media_output_select
      state: 'Home Audio'
    - service: media_player.volume_set
      data:
        entity_id: media_player.denon_avr_x1300w
        volume_level: !secret default_receiver_cast_volume
    - wait_template: '{{ is_state("sensor.media_player_status", "playing") }}'
      timeout: '00:1:00'
    - service: input_number.set_value
      data:
        entity_id: input_number.living_room_audio_volume
        value: !secret default_living_room_audio_volume
    - delay:
        milliseconds: 500
    - service: input_number.set_value
      data:
        entity_id: input_number.master_bedroom_audio_volume
        value: !secret default_master_bedroom_audio_volume
    - delay:
        milliseconds: 500
    - service: input_number.set_value
      data:
        entity_id: input_number.master_bathroom_audio_volume
        value: !secret default_bathroom_audio_volume
    - delay:
        milliseconds: 500
    - service: input_number.set_value
      data:
        entity_id: input_number.bathroom_audio_volume
        value: !secret default_bathroom_audio_volume
set_default_receiver_volume:
  alias: Sets the default volume for the home theatre
  sequence:
    - condition: template
      value_template: >
        {% if is_state('input_select.receiver_source_select', 'Cast Audio') or is_state('input_select.receiver_source_select', 'Shutdown') %}
          false
        {% else %}
          true
        {% endif %}
    - service: media_player.volume_set
      data:
        entity_id: media_player.denon_avr_x1300w
        volume_level: !secret default_receiver_volume
switch_to_chromecast:
  alias: Switch to Chromecast
  sequence:
    - condition: template
      value_template: >
        {% if is_state('input_select.receiver_source_select', 'Cast Audio') or is_state('input_select.receiver_source_select', 'Shutdown') %}
          false
        {% else %}
          true
        {% endif %}
    - service: script.turn_on
      entity_id: script.media_player_shutdown
    - service: media_player.turn_on
      entity_id: media_player.vizio_smartcast
    - wait_template: '{{ is_state("media_player.vizio_smartcast", "on") }}'
      timeout: '00:1:00'
    - service: media_player.select_source
      data:
        entity_id: media_player.vizio_smartcast
        source: HDMI-1
    - service: media_player.turn_on
      entity_id: media_player.denon_avr_x1300w
    - wait_template: '{{ is_state("media_player.denon_avr_x1300w", "on") }}'
      timeout: '00:1:00'
    - service: media_player.select_source
      data_template:
        entity_id: media_player.denon_avr_x1300w
        source: '{{ states("sensor.receiver_selected_source") }}'
    - wait_template: '{{ state_attr("media_player.denon_avr_x1300w", "source") == states("sensor.receiver_selected_source") }}'
      timeout: '00:01:00'
    - service: script.turn_on
      entity_id: script.set_default_audio_levels
switch_to_audio:
  alias: Switch to Audio
  sequence:
    # Execute this script only if we've selected Cast Audio
    - condition: state
      entity_id: input_select.receiver_source_select
      state: 'Cast Audio'
    - service: media_player.turn_off
      entity_id: media_player.vizio_smartcast
    - service: media_player.turn_on
      entity_id: media_player.denon_avr_x1300w
    - wait_template: '{{ is_state("media_player.denon_avr_x1300w", "on") }}'
      timeout: '00:01:00'
    - service: media_player.select_source
      data:
        entity_id: media_player.denon_avr_x1300w
        source: CastAudio
    - wait_template: '{{ state_attr("media_player.denon_avr_x1300w", "source") == "CastAudio" }}'
      timeout: '00:01:00'
    - service: script.turn_on
      entity_id: script.set_default_audio_levels
media_shutdown:
  alias: Shutdown all media
  sequence:
    # Execute this script only if we've selected Shutdown
    - condition: state
      entity_id: input_select.receiver_source_select
      state: 'Shutdown'
    - service: media_player.turn_off
      entity_id: media_player.vizio_smartcast
    - service: media_player.turn_off
      entity_id: media_player.denon_avr_x1300w
    - service: media_player.turn_off
      entity_id: media_player.vizio_smartcast
    - service: script.turn_on
      entity_id: script.media_player_shutdown
media_player_shutdown:
    alias: Shutdown media players if playing
    sequence:
      - condition: template
        value_template: >
          {% if is_state('sensor.media_player_output', 'none') %}
            false
          {% else %}
            true
          {% endif %}
      - service: media_player.turn_off
        data_template:
          entity_id: '{{ states("sensor.media_player_output") }}'
media_input_select:
  alias: Change the home theatre settings depending on the input selection
  sequence:
    - service: script.turn_on
      entity_id: script.media_shutdown
    - service: script.turn_on
      entity_id: script.switch_to_chromecast
    - service: script.turn_on
      entity_id: script.switch_to_audio